@using Microsoft.AspNetCore.Identity
@using EasyGames.Models                                  
@inject SignInManager<ApplicationUser> SignInManager     
@inject UserManager<ApplicationUser> UserManager

@* login partial shows different navbar links depending on signin status
   if signed in it greets the user by fullname or username and shows manage and logout
   if not signed in it shows register and login links *@

<ul class="navbar-nav">
@if (SignInManager.IsSignedIn(User))
{
    var user = await UserManager.GetUserAsync(User);
    var name = string.IsNullOrWhiteSpace(user?.FullName) ? User?.Identity?.Name : user!.FullName;

    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Manage/Index" title="Manage">
            Hello @name!
        </a>
    </li>
    <li class="nav-item">
        <form class="form-inline" asp-area="Identity" asp-page="/Account/Logout" asp-route-returnUrl="@Url.Action("Index", "Home", new { area = "" })" method="post">
            <button type="submit" class="nav-link btn btn-link text-dark">Logout</button>
        </form>
    </li>
}
else
{
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Register">Register</a>
    </li>
    <li class="nav-item">
        <a class="nav-link text-dark" asp-area="Identity" asp-page="/Account/Login">Login</a>
    </li>
}
</ul>
